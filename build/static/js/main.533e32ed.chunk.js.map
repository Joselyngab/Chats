{"version":3,"sources":["layouts/loginLayout.js","layouts/dashboardLayout.js","layouts/dashboardLayoutRoute.js","services/axios.js","services/user.js","components/signin/signin.js","services/note.js","services/category.js","components/note/notes.js","components/note/editNote.js","App.js","reportWebVitals.js","index.js"],"names":["Content","Layout","LoginLayout","children","style","minHeight","background","width","LoginLayoutRoute","Component","component","rest","render","props","Header","Sider","DashboardLayout","useState","collapsedMenu","setCollapsedMenu","a","localStorage","removeItem","console","log","message","success","error","collapsible","trigger","collapsed","className","mode","defaultSelectedKeys","Item","icon","CheckCircleOutlined","to","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","onClick","flexDirection","display","alignItems","getItem","marginRight","PoweroffOutlined","padding","DashboardLayoutRoute","api","axios","create","baseURL","user","login","body","post","resp","data","Title","Typography","Text","Signin","isDisabled","setIsDisabled","isModalVisible","setIsModalVisible","newUser","setNewUser","state","setState","history","useHistory","handleInput","event","target","name","value","handleRegisterInput","status","closeModal","setItem","token","push","gutter","xs","sm","md","lg","span","offset","xl","justify","align","direction","level","textAlign","fontWeight","marginTop","onFinish","rules","required","type","size","disabled","onChange","placeholder","Password","htmlType","footer","maskStyle","backgroundColor","visible","onCancel","centered","color","fontSize","id","block","height","borderRadius","getActive","get","headers","getArchived","getByID","update","put","delete","archive","activate","tokenParams","category","add","getAll","Option","Select","cancel","e","Notes","activeNote","setActiveNote","location","setLocation","categories","setCategories","setCategFilter","setallData","setData","categoriesService","aux","length","createdAt","updatedAt","getActiveNotes","noteService","getArchivedNotes","useEffect","window","pathname","getAllCategories","marginLeft","xxl","key","map","item","i","title","content","Link","archiveNote","activateNote","UploadOutlined","EditOutlined","onConfirm","deleteNote","okText","cancelText","DeleteOutlined","TextArea","Input","EditNote","Form","useForm","form","note","setNote","tags","setTags","newCategory","setNewCategory","setCreate","noteCategories","setNoteCategories","useParams","getNote","tagChild","tag","tagElem","closable","onClose","preventDefault","removedTag","newTags","filter","handleClose","setFieldsValue","document","getElementById","flex","ArrowLeftOutlined","bodyStyle","marginBottom","TweenOneGroup","enter","scale","opacity","duration","onEnd","leave","appear","stat","catAux","margin","PlusOutlined","placement","float","CloseCircleOutlined","createNote","updateNote","SaveOutlined","rows","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.533e32ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"antd/dist/antd.less\";\r\nimport { Layout } from \"antd\";\r\nconst { Content } = Layout;\r\nconst LoginLayout = ({ children }) => (\r\n  <Layout style={{ minHeight: \"100vh\" ,background:\"#00001e\" }}>\r\n    <Content style={{  width: \"100%\" }}>\r\n      <div>{children}</div>\r\n    </Content>\r\n  </Layout>\r\n);\r\n\r\nconst LoginLayoutRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <LoginLayout>\r\n          <Component {...props} />\r\n        </LoginLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginLayoutRoute;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  message,  \r\n} from \"antd\";\r\nimport \"./layouts.less\";\r\nimport {\r\n  CheckCircleOutlined,\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined,\r\n  PoweroffOutlined\r\n} from \"@ant-design/icons\";\r\nimport Archive from \"@2fd/ant-design-icons/lib/Archive\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst DashboardLayout = (props) => {\r\n  const [collapsedMenu, setCollapsedMenu] = useState(false);\r\n  \r\n  async function logoutUsr() {\r\n    try {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"welcMessage\");\r\n      console.log(localStorage)\r\n      message.success(\"Succesfully Logged Out\")\r\n    } catch (error) {\r\n      console.log(\"error\", error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Sider\r\n        collapsible\r\n        trigger={null}\r\n        collapsed={collapsedMenu}\r\n        className={collapsedMenu ? \"sider-collapsed\" : \"sider-style\"}\r\n      >\r\n        <div className=\"logo\">\r\n          \r\n        </div>\r\n        <Menu mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n          <Menu.Item\r\n            key=\"1\"\r\n            icon={<CheckCircleOutlined />}\r\n          >\r\n            <NavLink to=\"/activeNotes\">Active Notes</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"2\"\r\n            icon={<Archive />}\r\n          >\r\n            <NavLink to=\"/archivedNotes\">Archived Notes</NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n\r\n      <Layout className=\"site-layout\">\r\n        <Header className=\"header-layout\">\r\n          {React.createElement(\r\n            collapsedMenu ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n            {\r\n              className: \"trigger\",\r\n              onClick: () => setCollapsedMenu(!collapsedMenu),\r\n            }\r\n          )}\r\n          <div\r\n            style={{\r\n              flexDirection: \"row\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <h5>{localStorage.getItem(\"welcMessage\")}</h5>\r\n            <NavLink to=\"/signin\"style={{ marginRight: \"30px\" }}>\r\n              <div onClick={logoutUsr}>\r\n                <PoweroffOutlined style={{marginRight: \"4px\"}} /> \r\n              </div>\r\n            </NavLink>\r\n          </div>\r\n        </Header>\r\n        <Content\r\n          className=\"site-layout-background\"\r\n          style={{\r\n            padding: 20,\r\n            minHeight: 280,\r\n          }}\r\n        >\r\n          {props.children}\r\n        </Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;","import React from \"react\";\r\nimport \"./layouts.less\";\r\nimport { Route } from \"react-router-dom\";\r\nimport DashboardLayout from \"./dashboardLayout\";\r\n\r\nconst DashboardLayoutRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <DashboardLayout>\r\n          <Component {...props} />\r\n        </DashboardLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DashboardLayoutRoute;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    //baseURL: \"http://localhost:3000/\",\r\n    baseURL: \"https://\",\r\n})\r\n\r\nexport default api;","import api from \"./axios\";\r\n\r\nconst user = {\r\n  async login(body) {\r\n    try {\r\n      const resp = await api.post(\"users/login\", body);\r\n      return resp;\r\n      \r\n    } catch (error) {\r\n\r\n      return error;\r\n    }\r\n  },\r\n\r\n  async create(body){\r\n    try {\r\n      \r\n      const { data } = await api.post(\"users/add\", body);\r\n      return data;\r\n\r\n    } catch (error) {\r\n\r\n      return error;      \r\n\r\n    }\r\n    \r\n  }\r\n};\r\n\r\nexport default user;","import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Typography,\r\n  Row,\r\n  Col,\r\n  Space,\r\n  message,\r\n  Modal,\r\n} from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport user from \"./../../services/user\";\r\nimport \"./signin.less\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst Signin = (props) => {\r\n  const [isDisabled, setIsDisabled] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [newUser, setNewUser] = useState(null);\r\n  const [state, setState] = useState(null)\r\n  const history = useHistory();\r\n\r\n  const handleInput = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleRegisterInput = (event) => {\r\n    setNewUser({\r\n      ...newUser,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  async function handleRegister() {\r\n    try {\r\n      let resp = await user.create(newUser);\r\n      resp.status && message.success(\"Registered succesfully. Please Sign in\");\r\n      closeModal();\r\n    } catch (error) {\r\n      message.error(\"An Error has ocurred. Please try again\");\r\n    }\r\n    \r\n  }\r\n\r\n  async function handleSignin() {\r\n    try {\r\n      let resp = await user.login(state);\r\n      if (resp.status){\r\n        setIsDisabled(true);\r\n        localStorage.setItem(\"token\", resp.data.token);\r\n        localStorage.setItem(\"welcMessage\", resp.data.message);\r\n        history.push(\"/activeNotes\");\r\n        \r\n      }\r\n    } catch (error) {\r\n      message.error(\"An Error has ocurred. Please try again\");\r\n    }\r\n    \r\n  };\r\n\r\n  /** Functions for register modal */\r\n\r\n  const showModal = () => {\r\n    setState(null);\r\n    setIsModalVisible(true);\r\n    \r\n  }\r\n\r\n  const closeModal = () => {\r\n    setIsModalVisible(false);\r\n  }\r\n  \r\n\r\n  return (\r\n    <>    \r\n      <Row gutter={[0, { xs: 8, sm: 16, md: 24, lg: 32 }]}>\r\n        <Col\r\n          xs={{ span: 20, offset: 2 }}\r\n          sm={{ span: 16, offset: 4 }}\r\n          md={{ span: 14, offset: 5 }}\r\n          lg={{ span: 6, offset: 9 }}\r\n          xl={{ span: 6, offset: 9 }}\r\n        >\r\n          <Row justify=\"center\" align=\"middle\">\r\n            <Col span={24}>\r\n              <Space direction=\"vertical\" className=\"container-login\">\r\n                <Title\r\n                  level={4}\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    fontWeight: \"bold\",\r\n                    marginTop: 20,\r\n                  }}\r\n                >\r\n                  Nolatech Challenge\r\n                </Title>\r\n                <br />\r\n                <Form\r\n                  name=\"normal_login\"\r\n                  onFinish={handleSignin}\r\n                >\r\n                  <Form.Item\r\n                    name=\"username\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Username can't be blank\",\r\n                      },\r\n                      {\r\n                        type: \"email\",\r\n                        message: \"Invalid E-mail\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      size=\"large\"\r\n                      name=\"email\"\r\n                      disabled={isDisabled}\r\n                      onChange={handleInput}\r\n                      placeholder=\"Username\"\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"passwrd\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Password can't be blank\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input.Password\r\n                      size=\"large\"\r\n                      name=\"password\"\r\n                      disabled={isDisabled}\r\n                      placeholder=\"Password\"\r\n                      onChange={handleInput}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      disabled={isDisabled}\r\n                      className=\"login-form-button\"\r\n                      style={{ marginRight: \"15px\" }}\r\n                    >\r\n                      Sign In\r\n                    </Button>\r\n                    <Button\r\n                      size=\"large\"\r\n                      type=\"secondary\"\r\n                      className=\"login-form-button\"\r\n                      onClick={showModal}\r\n                      style={{ marginRight: \"15px\" }}\r\n                    >\r\n                      Register\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </Space>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Modal\r\n        footer={null}\r\n        className=\"container-modal\"\r\n        maskStyle={{ backgroundColor: \"rgba(0,0, 0, 0.90)\" }}\r\n        visible={isModalVisible}\r\n        onCancel={() => closeModal()}\r\n        centered={true}\r\n      >\r\n        <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n          <Row\r\n            gutter={[8, { xs: 8, sm: 16, md: 24, lg: 32 }]}\r\n            justify=\"center\"\r\n          >\r\n            <Space direction=\"vertical\" style={{}}>                    \r\n                <Title level={4} style={{ color: \"#00001E\", textAlign: \"center\" }}>\r\n                    Register\r\n                </Title>\r\n                <Text\r\n                style={{\r\n                    color: \"#00001E\",\r\n                    fontSize: 16,\r\n                    padding: \"0px 24px\",\r\n                }}\r\n                >\r\n                Please enter your information\r\n                </Text>\r\n            </Space>\r\n          </Row>\r\n          <Row\r\n            gutter={[8, { xs: 8, sm: 16, md: 24, lg: 32 }]}\r\n            justify=\"center\"\r\n          >\r\n            <Space direction=\"vertical\">\r\n              <Space direction=\"horizontal\" size=\"small\" style={{ width: \"100%\" }}>\r\n                <Form onFinish={ handleRegister } >                      \r\n                  <Form.Item\r\n                    name=\"firstName\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"First Name can't be blank\",\r\n                      }\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      size=\"medium\"\r\n                      name=\"firstName\"\r\n                      disabled={isDisabled}\r\n                      onChange={handleRegisterInput}\r\n                      placeholder=\"First Name\"\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"lastName\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Last Name can't be blank\",\r\n                      }\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      size=\"medium\"\r\n                      name=\"lastName\"\r\n                      disabled={isDisabled}\r\n                      onChange={handleRegisterInput}\r\n                      placeholder=\"Last Name\"\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"useremail\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Email can't be blank\",\r\n                      },\r\n                      {\r\n                        type: \"email\",\r\n                        message: \"Invalid E-mail\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      size=\"medium\"\r\n                      name=\"email\"\r\n                      disabled={isDisabled}\r\n                      onChange={handleRegisterInput}\r\n                      placeholder=\"Email\"\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"passwrd\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Password can't be blank\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input.Password\r\n                      size=\"medium\"\r\n                      name=\"password\"\r\n                      disabled={isDisabled}\r\n                      placeholder=\"Password\"\r\n                      onChange={handleRegisterInput}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    name=\"passwrdConfirm\"\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        message: \"Confirm Password can't be blank\",\r\n                      },\r\n                    ]}\r\n                  >\r\n                    <Input.Password\r\n                      size=\"medium\"\r\n                      name=\"confirm\"\r\n                      disabled={isDisabled}\r\n                      placeholder=\"Confirm Password\"\r\n                      onChange={handleRegisterInput}\r\n                    />\r\n                  </Form.Item>\r\n                  <Row gutter={[32, { xs: 8, sm: 16, md: 24, lg: 32 }]} justify=\"end\">\r\n                    <Col\r\n                      xs={{ span: 24, offset: 0 }}\r\n                      sm={{ span: 24, offset: 0 }}\r\n                      md={{ span: 12, offset: 0 }}\r\n                      lg={{ span: 12, offset: 0 }}\r\n                      xl={{ span: 12, offset: 0 }}\r\n                    >\r\n                      <div id=\"btn-previous\" className=\"btn-previous-security\">\r\n                        <Button\r\n                          block\r\n                          size=\"medium\"\r\n                          className=\"btn-previous-security\"\r\n                          onClick={() => closeModal()}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <Col\r\n                      xs={{ span: 24, offset: 0 }}\r\n                      sm={{ span: 24, offset: 0 }}\r\n                      md={{ span: 12, offset: 0 }}\r\n                      lg={{ span: 12, offset: 0 }}\r\n                      xl={{ span: 12, offset: 0 }}\r\n                    >\r\n                      <Button\r\n                        block\r\n                        size=\"medium\"\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                        style={{\r\n                            height: \"40px\",\r\n                            fontSize: \"14px\",\r\n                            fontWeight: 600,\r\n                            borderRadius: \"5px\",\r\n                        }}\r\n                      >\r\n                        Register\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Space>\r\n            </Space>\r\n          </Row>\r\n        </Space>\r\n      </Modal>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Signin;","import api from \"./axios\";\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst user = {\r\n  async getActive() {\r\n    try {\r\n      const resp = await api.get(\"notes/\",{\r\n        headers: {\r\n          token: token\r\n        },\r\n      });\r\n      return resp;\r\n      \r\n    } catch (error) {\r\n\r\n      return error;\r\n    }\r\n  },\r\n\r\n  async getArchived(){\r\n    try {      \r\n      const { data } = await api.get(\"notes/archived\",{\r\n        headers: {\r\n          token: token\r\n        },\r\n      });\r\n      return data;\r\n\r\n    } catch (error) {\r\n        \r\n      return error;  \r\n    }\r\n    \r\n  },\r\n  async getByID(id){\r\n    try {      \r\n      const { data } = await api.get(\"notes/\" + id,{\r\n        headers: {\r\n          token: token\r\n        },\r\n      });\r\n      return data;\r\n\r\n    } catch (error) {\r\n        \r\n      return error;  \r\n    }\r\n    \r\n  },\r\n  async create(body){\r\n    try {      \r\n      const { data } = await api.post(\"notes/add\", body, {\r\n        headers: {\r\n          token: token\r\n        },\r\n      });\r\n      return data;\r\n\r\n    } catch (error) {\r\n        \r\n      return error;  \r\n    }    \r\n  },\r\n  async update(id, body){\r\n    try {      \r\n      const { data } = await api.put(\"notes/\" + id, body, {\r\n        headers: {\r\n          token: token\r\n        },\r\n      });\r\n      return data;\r\n\r\n    } catch (error) {\r\n        \r\n      return error;  \r\n    }    \r\n  },  \r\n  async delete(id){\r\n    try {      \r\n      const { data } = await api.put(\"notes/delete/\" + id, {}, {\r\n        headers: {\r\n          token: token\r\n        },\r\n      });\r\n      return data;\r\n\r\n    } catch (error) {\r\n        \r\n      return error;  \r\n    }    \r\n  },\r\n  async archive(id){\r\n    try {      \r\n      const { data } = await api.put(\"notes/store/\" + id, {}, {\r\n        headers: {\r\n          token: token\r\n        },\r\n      });\r\n      return data;\r\n\r\n    } catch (error) {\r\n        \r\n      return error;  \r\n    }    \r\n  },\r\n  async activate(id, tokenParams){\r\n    try {\r\n      const { data } = await api.put(\"notes/activate/\" + id, {},{\r\n        headers: {\r\n            token: tokenParams\r\n          },\r\n      });\r\n      return data;\r\n\r\n    } catch (error) {\r\n      return error;  \r\n    }    \r\n  }\r\n};\r\n\r\nexport default user;","import api from \"./axios\";\r\n\r\nconst category = {\r\n  async add(body) {\r\n    try {\r\n      const resp = await api.post(\"categories/add\", body, {\r\n        headers: {\r\n          token: localStorage.getItem(\"token\")\r\n        },\r\n      });\r\n      return resp;\r\n      \r\n    } catch (error) {\r\n\r\n      return error;\r\n    }\r\n  },\r\n\r\n  async getAll(){\r\n    try {      \r\n      const { data } = await api.get(\"categories\", {\r\n        headers: {\r\n          token: localStorage.getItem(\"token\")\r\n        },\r\n      });\r\n      return data;\r\n\r\n    } catch (error) {\r\n\r\n      return error;  \r\n    }\r\n    \r\n  }\r\n};\r\n\r\nexport default category;","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Typography, Popconfirm, message, Col, Select, Card, Button } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n/** Icons */\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  UploadOutlined\r\n} from \"@ant-design/icons\";\r\nimport Note from \"@2fd/ant-design-icons/lib/Note\";\r\nimport Archive from \"@2fd/ant-design-icons/lib/Archive\";\r\n\r\n/** notes service */\r\nimport noteService from \"./../../services/note\"\r\n\r\n/** Categories Service */\r\nimport categoriesService from \"./../../services/category\";\r\n\r\nimport \"./notes.less\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst { Option } = Select;\r\n\r\nconst cancel = (e) => {\r\n  message.error('Click on No');\r\n};\r\n\r\nconst Notes = () => {\r\n  \r\n  const history = useHistory();\r\n\r\n  const [activeNote, setActiveNote] = useState(true);\r\n  const [location, setLocation] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n  const [categFilter, setCategFilter] = useState(null);\r\n  const [allData, setallData] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLocation(window.location.pathname);\r\n    getAllCategories();\r\n    if(window.location.pathname === \"/activeNotes\"){\r\n        setActiveNote(true);\r\n        getActiveNotes();\r\n    }else{\r\n        setActiveNote(false);\r\n        getArchivedNotes();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [!location, window.location.pathname])   \r\n  \r\n  /** Get All Categories */\r\n  async function getAllCategories (){\r\n    try {\r\n        let resp = await categoriesService.getAll();\r\n        if (resp.status){\r\n            let aux = [...resp.data, { id: resp.data.length + 1, name: \"ALL\", status: true, createdAt: \"-\", updatedAt: \"-\" }];\r\n            setCategories(aux);\r\n        }    \r\n    } catch (error) {\r\n        message.error(\"An error has ocurred. Please try again\");\r\n    }        \r\n  }\r\n\r\n  /** Filter notes by category */\r\n//   const getNotesByCategory = () => {\r\n//     let newNotes;\r\n//     categFilter !== categories.length  ?\r\n//         newNotes = allData.filter((item) => item.categories === categFilter)\r\n//     : \r\n//         newNotes = allData\r\n    \r\n//   }\r\n\r\n  /** Get Notes  */\r\n  async function getActiveNotes(){\r\n    try {\r\n        let resp = await noteService.getActive();\r\n        if(resp.status){\r\n            let aux = resp.data;\r\n            setData(aux?.data[0]?.Notes);\r\n            setallData(aux?.data[0]?.Notes);\r\n        }        \r\n    } catch (error) {\r\n        message.error(\"An error has ocurred. Please Sign in again \");\r\n    }\r\n  }\r\n\r\n  async function getArchivedNotes(){\r\n    try {\r\n        let resp = await noteService.getArchived();\r\n        if(resp.status){\r\n            let aux = resp.data;\r\n            setData(aux[0]?.Notes);\r\n            setallData(aux?.data[0]?.Notes);\r\n        }        \r\n    } catch (error) {\r\n        message.error(\"An error has ocurred. Please Sign in again \");\r\n        \r\n    }\r\n  }\r\n\r\n\r\n\r\n  async function archiveNote(id) {\r\n      \r\n      try {\r\n        let resp = await noteService.archive(id);\r\n        if(resp.status){\r\n            getActiveNotes();\r\n            message.success('Note successfully archived');\r\n        }\r\n      } catch (error) {\r\n        \r\n            message.error(\"An error has ocurred. Please try again \");\r\n        \r\n      }\r\n  }\r\n\r\n  async function activateNote(id) {\r\n      \r\n    try {\r\n    const token = localStorage.getItem(\"token\");\r\n      let resp = await noteService.activate(id, token);\r\n      if(resp.status){\r\n          getArchivedNotes();\r\n          message.success('Note successfully activated');\r\n      }\r\n    } catch (error) {\r\n          message.error(\"An error has ocurred. Please try again \");\r\n      \r\n    }\r\n  }\r\n\r\n  async function deleteNote(id){\r\n    try {\r\n      let resp = await noteService.delete(id);\r\n      if(resp.status){\r\n          activeNote ? getActiveNotes() : getArchivedNotes()\r\n          message.success('Note deleted');\r\n      }\r\n    } catch (error) {\r\n          message.error(\"An error has ocurred. Please try again \");      \r\n    }\r\n  }\r\n  \r\nreturn (\r\n  <>\r\n\r\n    <Card className=\"card-dashboard\">\r\n        {\r\n            activeNote ?   \r\n                <Row>\r\n                    <h1>Active Notes</h1>                     \r\n                    <Button type=\"primary\" size=\"medium\" onClick={() => { history.push(\"/edit\"); }} style={{ marginLeft: \"20px\"}}>\r\n                        Create Note\r\n                    </Button>\r\n                </Row>                \r\n            \r\n            : \r\n                <h1>Archived Notes</h1>\r\n        }   \r\n        \r\n        <Row\r\n            gutter={[8, { xs: 8, sm: 16, md: 16, lg: 16, xl: 16 }]}\r\n            style={{ padding: \"5px 10px\" }}\r\n        >        \r\n            <Col\r\n            xs={{ span: 24, offset: 0 }}\r\n            sm={{ span: 24, offset: 0 }}\r\n            md={{ span: 24, offset: 0 }}\r\n            lg={{ span: 8, offset: 0 }}\r\n            xl={{ span: 8, offset: 0 }}\r\n            xxl={{ span: 8, offset: 0 }}\r\n            style={{\r\n                textAlign: \"left\",\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n            }}\r\n            >\r\n            <Select\r\n                style={{ width: \"100%\" }}\r\n                size=\"medium\"\r\n                placeholder=\"Categories\"\r\n                onChange={(key) => setCategFilter(key)}\r\n                >\r\n                {categories.map((item) => {\r\n                    return <Option key={item.id} value={item.value}>{item.name}</Option>;\r\n                })}\r\n            </Select>\r\n            </Col>\r\n            <Col\r\n            xs={{ span: 24, offset: 0 }}\r\n            sm={{ span: 24, offset: 0 }}\r\n            md={{ span: 24, offset: 0 }}\r\n            lg={{ span: 3, offset: 0 }}\r\n            xl={{ span: 3, offset: 0 }}\r\n            xxl={{ span: 3, offset: 0 }}\r\n            style={{\r\n                textAlign: \"left\",\r\n                alignItems: \"center\",\r\n                display: \"flex\",\r\n            }}\r\n            >\r\n            <Button type=\"primary\" size=\"medium\" style={{ width: \"100%\" }} \r\n                //onClick={getNotesByCategory} \r\n            >\r\n                Filter\r\n            </Button>           \r\n            </Col>\r\n        </Row>\r\n            \r\n    </Card>\r\n        {\r\n            data && data?.length > 0 ? \r\n                <Row gutter={[16, { xs: 8, sm: 16, md: 8, lg: 8, xl: 8 }]}>\r\n                    {\r\n                        data.map((item, i) => (\r\n                            <Col\r\n                                key={item.key + \"-\"}\r\n                                xs={{ span: 24, offset: 0 }}\r\n                                sm={{ span: 24, offset: 0 }}\r\n                                md={{ span: 24, offset: 0 }}\r\n                                lg={{ span: 12, offset: 0 }}\r\n                                xl={{ span: 12, offset: 0 }}\r\n                            >\r\n                            <Card className=\"card-dashboard\" >\r\n                                <Row>\r\n                                    <Col className=\"column-icon\">\r\n                                        <Note className=\"icon\"/>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Title level={5} className=\"title\">\r\n                                            {item.title}\r\n                                        </Title>\r\n                                        <p>{item.content}</p>\r\n                                    </Col>\r\n                                </Row>                        \r\n                                <div>\r\n                                    {\r\n                                        activeNote ?                                \r\n                                            <Typography.Link \r\n                                                onClick={()=>archiveNote(item.id)}                                        \r\n                                            >\r\n                                                <Archive className=\"action-icon\"/>\r\n                                            </Typography.Link> \r\n                                        :\r\n                                            <Typography.Link    \r\n                                                onClick={() => {\r\n                                                    activateNote(item.id)\r\n                                                }}                                        \r\n                                            >\r\n                                                <UploadOutlined className=\"action-icon\"/>                                        \r\n                                            </Typography.Link> \r\n                                    }\r\n                                    <Typography.Link \r\n                                        onClick={() => history.push(\"/edit/\" + item.id)}\r\n                                        \r\n                                    >\r\n                                        <EditOutlined className=\"action-icon\"/>\r\n                                    </Typography.Link> \r\n                                    <Popconfirm\r\n                                        title=\"Are you sure you want to delete this note?\"\r\n                                        onConfirm={() => { deleteNote(item.id) }}\r\n                                        onCancel={cancel}\r\n                                        okText=\"Yes\"\r\n                                        cancelText=\"No\"\r\n                                    >\r\n                                        <DeleteOutlined className=\"action-icon\"/>\r\n                                    </Popconfirm>                        \r\n                                </div>                            \r\n                            </Card>\r\n                            </Col>\r\n                        ))\r\n                    }\r\n                </Row>\r\n            :\r\n                <>\r\n                    <h2>You don´t have any note yet</h2>\r\n                </>\r\n        }\r\n  </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Notes;","import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Row, Col, Button, Input, Form, Tag, Card, Tooltip, message, Select, Modal, Space } from \"antd\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { TweenOneGroup } from \"rc-tween-one\";\r\nimport { ArrowLeftOutlined, SaveOutlined, CloseCircleOutlined} from \"@ant-design/icons\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n/** import category services */\r\nimport categoriesService from \"./../../services/category\";\r\n\r\n/** notes service */\r\nimport noteService from \"./../../services/note\";\r\n\r\nimport \"./notes.less\";\r\n\r\nconst { Title } = Typography;\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\n\r\nconst EditNote = () => {\r\n    const history = useHistory();\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const [note, setNote] = useState(null);\r\n\r\n  /** Tags for categories */\r\n  const [tags, setTags] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  /** to add new category */\r\n  const [newCategory, setNewCategory] = useState(null);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [create, setCreate] = useState(true);\r\n  const [noteCategories, setNoteCategories] = useState([]);\r\n  const { id } = useParams()\r\n\r\n\r\n  useEffect(() => {\r\n    getAllCategories();\r\n    if(window.location.pathname !== \"/edit\"){\r\n        setCreate(false);\r\n        getNote(id);\r\n\r\n    }else{\r\n        setCreate(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n  \r\n\r\n\r\n  const handleClose = (removedTag) => {\r\n    const newTags = tags.filter((tag) => tag !== removedTag);\r\n    setTags(newTags);\r\n  };\r\n\r\n  const forMap = (tag) => {\r\n    const tagElem = (\r\n      <Tag\r\n        closable\r\n        onClose={(e) => {\r\n          e.preventDefault();\r\n          handleClose(tag);\r\n          let aux = [...categories, { name: tag, value: tag}];\r\n          // let stat = noteCategories.filter((item) => item !== tag);\r\n          // setNoteCategories(stat);\r\n          setCategories(aux);\r\n        }}\r\n      >\r\n        {tag}\r\n      </Tag>\r\n    );\r\n    return (\r\n      <span\r\n        key={tag}\r\n        style={{\r\n          display: \"inline-block\"\r\n        }}\r\n      >\r\n        {tagElem}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const tagChild = tags.map(forMap);\r\n\r\n\r\n  const onFinish = () => {\r\n    console.log(\"Edited\", note);\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setNote({\r\n      ...note,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleCatInput = (e) => {\r\n    setNewCategory({ name: e.target.value });\r\n  }\r\n\r\n  /** update note */\r\n  async function updateNote(id){\r\n    setNote({\r\n        ...note,\r\n        categories: noteCategories\r\n    })\r\n    try {\r\n        let resp = await noteService.update(id, note);\r\n        if(resp?.status){\r\n            message.success(\"Updated successfully\");\r\n        }\r\n    } catch (error) {\r\n        \r\n    }\r\n  }\r\n\r\n  async function getNote(id){\r\n    try {\r\n        let resp = await noteService.getByID(id);\r\n        setNote(resp.data[0].Notes[0]);\r\n        \r\n        form.setFieldsValue({\r\n            title: resp.data[0].Notes[0].title,\r\n            content: resp.data[0].Notes[0].content\r\n        })       \r\n    } catch (error) {\r\n        \r\n    }\r\n  }\r\n\r\n  /** create a new note */\r\n\r\n  async function createNote(){\r\n    setNote({\r\n        ...note,\r\n        categories: noteCategories\r\n    })\r\n    try {\r\n        let resp = await noteService.create(note);\r\n        resp && message.success(\"Updated succesfully\");\r\n        \r\n    } catch (error) {\r\n        message.error(\"Please try again\");\r\n        \r\n    }\r\n  }\r\n\r\n\r\n  /** Register a new category */\r\n  async function addNewCategory () {\r\n    try {\r\n        let resp = await categoriesService.add(newCategory);\r\n        if (resp.status){\r\n            message.success(\"Category registered\");\r\n    \r\n            let aux = [...categories, { value: newCategory.name, name: newCategory.name }];\r\n            setCategories(aux);\r\n            closeModal();\r\n        }    \r\n    } catch (error) {\r\n        message.success(\"An error has ocurred. Please try again\");\r\n    }    \r\n  }\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setNewCategory(null);   \r\n    setIsModalVisible(false);\r\n    document.getElementById(\"description\").value = \"\";\r\n  }\r\n\r\n\r\n  /** Get All Categories */\r\n  async function getAllCategories (){\r\n    try {\r\n        let resp = await categoriesService.getAll();\r\n        if (resp.status){\r\n            let aux = resp.data;\r\n            setCategories(aux);\r\n        }    \r\n    } catch (error) {\r\n        message.error(\"An error has ocurred. Please try again\");\r\n    }        \r\n  }\r\n\r\n  return (\r\n    <>\r\n        <Card className=\"card-dashboard\">            \r\n            <Row> \r\n                <Col span={6} style={{ display: \"flex\", flexDirection: \"row\", flex: \"0 0 10%\" }}> \r\n                    <Typography.Link onClick={() => history.push(\"/activeNotes\")}> \r\n                        <ArrowLeftOutlined style={{ fontSize: \"20px\" }} /> \r\n                    </Typography.Link> \r\n                </Col> \r\n                <Col span={6}> \r\n                    <h1 style={{ marginTop: \"-3px\", marginLeft: \"-10px\" }}> Edit Note</h1> \r\n                </Col> \r\n            </Row> \r\n            <Row> \r\n                <Col span={10}>\r\n                    <Card className=\"tags-card\" bodyStyle={{ padding: \"0\"}}>\r\n                        <div style={{ marginBottom: 16, padding: \"10px\" }} > \r\n                            <TweenOneGroup \r\n                                enter={{ scale: 0.8, opacity: 0, type: \"from\", duration: 100 }} \r\n                                onEnd={(e) => { \r\n                                    if (e.type === \"appear\" || e.type === \"enter\") { \r\n                                        e.target.style = \"display: inline-block\"; \r\n                                    } }} \r\n                                leave={{ opacity: 0, width: 0, scale: 0, duration: 200 }} \r\n                                appear={false} > \r\n                                    {tagChild} \r\n                            </TweenOneGroup> \r\n                        </div>\r\n                    </Card>\r\n                </Col> \r\n                <Col span={8}>\r\n                    <Select \r\n                        style={{ width: \"30%\" }} \r\n                        size=\"medium\" \r\n                        placeholder=\"Categories\"\r\n                        className=\"cat-select\"\r\n                        onChange={(value, key) => {\r\n                            let stat = categories.filter((item) => item.value !== value);\r\n                            let catAux= [...noteCategories, key]\r\n                            setNoteCategories(catAux);             \r\n                            setCategories(stat);\r\n                            setTags([...tags, value]);\r\n                        }}\r\n                    >\r\n                        {categories.map((item, i) => {\r\n                        return <Option key={item.id} value={item.name}>{item.name}</Option>;\r\n                        })}\r\n                    </Select>\r\n                </Col>\r\n                <Col span={6}>\r\n                    <Button type=\"primary\" size=\"medium\" style={{ margin: \"auto\" }} onClick={showModal}>\r\n                        <PlusOutlined /> Add Category\r\n                    </Button>\r\n                </Col>\r\n            </Row> \r\n            <Row justify=\"center\" align=\"middle\" style={{ padding: \"30px\" }}> \r\n                <Col span={24}> \r\n                    <Form form={form} onFinish={onFinish}> \r\n                        <Form.Item style={{ marginLeft: \"auto\" }} name=\"button\"> \r\n                            <Tooltip placement=\"topLeft\" title=\"Cancel\">                            \r\n                                <Button size=\"large\" type=\"secondary\" className=\"form-btn\" onClick={() => history.push(\"/activeNotes\")} style={{ marginRight: \"15px\", float: \"right\" }} > \r\n                                    <CloseCircleOutlined /> \r\n                                </Button>                             \r\n                            </Tooltip>\r\n                            <Tooltip placement=\"topLeft\" title=\"Save\">\r\n                                <Button size=\"large\" type=\"primary\" htmlType=\"submit\" className=\"form-btn\" \r\n                                    onClick={() => {\r\n                                        window.location.pathname === \"/edit\" ?\r\n                                            createNote()\r\n                                        :\r\n                                            updateNote(id)\r\n                                    }} \r\n                                    style={{ marginRight: \"15px\", float: \"right\" }} > \r\n                                    <SaveOutlined /> \r\n                                </Button> \r\n                            </Tooltip>\r\n                        </Form.Item> \r\n                        <Form.Item name=\"title\" rules={[ { required: true, message: \"Title can't be blank\" } ]} > \r\n                            <Input size=\"large\" name=\"title\" onChange={handleInput} placeholder=\"Title\" /> \r\n                        </Form.Item> \r\n                        <Form.Item name=\"content\"> \r\n                            <TextArea rows={20} placeholder=\"Content\" rules={[ { required: true, message: \"Content can't be blank\" } ]} onChange={handleInput} name=\"content\" /> \r\n                        </Form.Item> \r\n                    </Form> \r\n                </Col> \r\n            </Row>\r\n        </Card>\r\n        \r\n        <Modal\r\n          footer={null}\r\n          className=\"container-modal\"\r\n          maskStyle={{ backgroundColor: \"rgba(0,0, 0, 0.90)\" }}\r\n          visible={isModalVisible}\r\n          onCancel={() => closeModal()}\r\n          centered={true}\r\n        >\r\n            <Space direction=\"vertical\" style={{ width: \"100%\" }}>\r\n                <Row\r\n                    gutter={[8, { xs: 8, sm: 16, md: 24, lg: 32 }]}\r\n                    justify=\"center\"\r\n                >\r\n                    <Space direction=\"vertical\" style={{}}>                    \r\n                        <Title level={4} style={{ color: \"#00001E\", textAlign: \"center\" }}>\r\n                            Add new Category\r\n                        </Title>\r\n                    </Space>\r\n                </Row>\r\n                <Row\r\n                    gutter={[8, { xs: 8, sm: 16, md: 24, lg: 32 }]}\r\n                    justify=\"center\"\r\n                >\r\n                    <Space direction=\"vertical\">\r\n                        <Space direction=\"horizontal\" size=\"small\" style={{ width: \"100%\" }}>\r\n                            <Form onFinish={ addNewCategory } >                      \r\n                                <Form.Item\r\n                                    name=\"description\"\r\n                                    rules={[\r\n                                        {\r\n                                        required: true,\r\n                                        message: \"Category description can't be blank\",\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input\r\n                                        size=\"medium\"\r\n                                        name=\"description\"\r\n                                        id=\"description\"\r\n                                        onChange={ handleCatInput }\r\n                                        placeholder=\"Category description\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <Row gutter={[32, { xs: 8, sm: 16, md: 24, lg: 32 }]} justify=\"end\">\r\n                                    <Col\r\n                                        xs={{ span: 24, offset: 0 }}\r\n                                        sm={{ span: 24, offset: 0 }}\r\n                                        md={{ span: 12, offset: 0 }}\r\n                                        lg={{ span: 12, offset: 0 }}\r\n                                        xl={{ span: 12, offset: 0 }}\r\n                                    >\r\n                                        <div id=\"btn-previous\" className=\"btn-previous-security\">\r\n                                            <Button\r\n                                                block\r\n                                                size=\"medium\"\r\n                                                className=\"btn-previous-security\"\r\n                                                onClick={() => closeModal()}\r\n                                            >\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={{ span: 24, offset: 0 }}\r\n                                        sm={{ span: 24, offset: 0 }}\r\n                                        md={{ span: 12, offset: 0 }}\r\n                                        lg={{ span: 12, offset: 0 }}\r\n                                        xl={{ span: 12, offset: 0 }}\r\n                                    >\r\n                                        <Button\r\n                                            block\r\n                                            size=\"medium\"\r\n                                            type=\"primary\"\r\n                                            htmlType=\"submit\"\r\n                                            style={{\r\n                                                height: \"40px\",\r\n                                                fontSize: \"14px\",\r\n                                                fontWeight: 600,\r\n                                                borderRadius: \"5px\",\r\n                                            }}\r\n                                        >\r\n                                            Register\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </Space>\r\n                    </Space>\r\n                </Row>\r\n            </Space>\r\n        </Modal>\r\n\r\n                    \r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditNote","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport \"./App.less\";\r\n/** Layouts **/\r\nimport LoginLayoutRoute from \"./layouts/loginLayout\";\r\nimport DashboardLayoutRoute from \"./layouts/dashboardLayoutRoute\";\r\n/** Components **/\r\nimport Signin from \"./components/signin/signin\";\r\nimport Notes from \"./components/note/notes\";\r\nimport EditNote from \"./components/note/editNote\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          {/* <Route \r\n            exact \r\n            path=\"/\"\r\n            render={() => {\r\n              console.log(\"localStorage.getIt\",localStorage.getItem(\"token\"))\r\n              return (localStorage.getItem(\"token\")) ? (\r\n                <Redirect to=\"/activeNotes\" />\r\n              ):\r\n              (\r\n                <Redirect to=\"/signin\" />\r\n              )\r\n            }}\r\n          >\r\n          </Route>\r\n          <Route \r\n            exact \r\n            path=\"/activeNotes\"\r\n            render={() => {\r\n              console.log(\"localStorage.getIt\",localStorage.getItem(\"token\"))\r\n              return (localStorage.getItem(\"token\")) ? (\r\n                <DashboardLayoutRoute exact path=\"/activeNotes\" component={Notes} />\r\n              ):\r\n              (\r\n                <Redirect to=\"/signin\" />\r\n              )\r\n            }}\r\n          >\r\n          </Route>\r\n          <Route \r\n            exact \r\n            path=\"/archivedNotes\"\r\n            render={() => {\r\n              return (localStorage.getItem(\"token\")) ? (\r\n                <DashboardLayoutRoute exact path=\"/archivedNotes\" component={Notes} />\r\n              ):\r\n              (\r\n                <Redirect to=\"/signin\" />\r\n              )\r\n            }}\r\n          >\r\n          </Route>          \r\n          <Route \r\n            exact \r\n            path=\"/edit\"\r\n            render={() => {\r\n              return (localStorage.getItem(\"token\")) ? (\r\n                <DashboardLayoutRoute exact path=\"/edit\" component={EditNote} />\r\n              ):\r\n              (\r\n                <Redirect to=\"/signin\" />\r\n              )\r\n            }}\r\n          >\r\n          </Route>*/}\r\n          <DashboardLayoutRoute exact path=\"/activeNotes\" component={Notes} />\r\n          <DashboardLayoutRoute exact path=\"/archivedNotes\" component={Notes} />\r\n          <DashboardLayoutRoute exact path=\"/edit\" component={EditNote} />\r\n          <DashboardLayoutRoute exact path=\"/edit/:id\" component={EditNote} />\r\n          <LoginLayoutRoute exact path=\"/signin\" component={Signin} />                  \r\n        </Switch>\r\n      </Router>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";  \r\n\r\nReactDOM.render(\r\n      \r\n    <App />,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}